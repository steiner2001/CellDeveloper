/TEMPLATE

id :: Turing
| start : int
| accept : int
| rules
	; [char list, int] => [char list, direction list, int]
	; .../


x_to_y :: Turing
| start : 0
| accept : 1
| rules
	; [['x'], 0] => [['y'], [R], 0]
	; [[_], 0] => [[_], [S], 1]
	
duplicate :: Turing
| start : 0
| accept : 2
| rules
	; [['x', _], 0] => [['x', 'x'], [S, R], 1]
	; [['x', _], 1] => [[_, 'x'], [R, R], 0]
	; [[_, _], 0] => [[_, _], [S, S], 2]

binarySum :: Turing
| start : 0
| accept : 5
| rules
	#reading first number
	; [['0', _, _], 0] => [['0', _, _], [R, S, S], 0]
	; [['1', _, _], 0] => [['1', _, _], [R, S, S], 0]
	; [['p', _, _], 0] => [[_, _, _], [R, S, S], 1]
	#writing second number
	; [['0', _, _], 1] => [[_, '0', _], [R, R, S], 1]
	; [['1', _, _], 1] => [[_, '1', _], [R, R, S], 1]
	; [[_, _, _], 1] => [[_, _, _], [L, L, S], 2]
	#move back to the ends
	; [[_, '0', _], 2] => [[_, '0', _], [L, S, S], 2]
	; [[_, '1', _], 2] => [[_, '1', _], [L, S, S], 2]
	; [['1', '0', _], 2] => [['1', '0', _], [S, S, S], 3]
	; [['1', '1', _], 2] => [['1', '1', _], [S, S, S], 3]
	; [['0', '1', _], 2] => [['0', '1', _], [S, S, S], 3]
	; [['0', '0', _], 2] => [['0', '0', _], [S, S, S], 3]
	#sum without shift
	; [['1', '0', _], 3] => [['1', '0', '1'], [L, L, L], 3]
	; [['0', '1', _], 3] => [['0', '1', '1'], [L, L, L], 3]
	; [['0', '0', _], 3] => [['0', '0', '0'], [L, L, L], 3]
	; [['1', '1', _], 3] => [['1', '1', '0'], [L, L, L], 4]
	; [[_, _, _], 3] => [[_, _, _], [S, S, S], 5]
	; [['1', _, _], 3] => [['1', _, '1'], [L, L, L], 3]
	; [['0', _, _], 3] => [['0', _, '0'], [L, L, L], 3]
	; [[_, '1', _], 3] => [[_, '1', '1'], [L, L, L], 3]
	; [[_, '0', _], 3] => [[_, '0', '0'], [L, L, L], 3]
	#sum with shift
	; [['0', '0', _], 4] => [['0', '0', '1'], [L, L, L], 3]
	; [['0', '1', _], 4] => [['0', '1', '0'], [L, L, L], 4]
	; [['1', '0', _], 4] => [['1', '0', '0'], [L, L, L], 4]
	; [['1', '1', _], 4] => [['1', '1', '1'], [L, L, L], 4]
	; [[_, '0', _], 4] => [[_, '0', '1'], [L, L, L], 3]
	; [[_, '1', _], 4] => [[_, '1', '0'], [L, L, L], 4]
	; [['1', _, _], 4] => [['1', _, '0'], [L, L, L], 4]
	; [['0', _, _], 4] => [['0', _, '1'], [L, L, L], 3]
	#end process
	; [[_, _, _], 4] => [[_, _, '1'], [S, S, S], 5]
	
















